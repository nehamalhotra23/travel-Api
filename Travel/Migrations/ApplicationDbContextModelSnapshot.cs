// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Models;

namespace Travel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Travel.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName");

                    b.Property<int>("CountryId");

                    b.Property<double>("Rating");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 3,
                            CityName = "Los Angelos",
                            CountryId = 1,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Paris",
                            CountryId = 2,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Venice",
                            CountryId = 3,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Hong Kong",
                            CountryId = 4,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "London",
                            CountryId = 5,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Delhi",
                            CountryId = 6,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 9,
                            CityName = "Nairobi",
                            CountryId = 7,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 10,
                            CityName = "Bali",
                            CountryId = 8,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 11,
                            CityName = "Brasilia",
                            CountryId = 9,
                            Rating = 0.0
                        },
                        new
                        {
                            CityId = 12,
                            CityName = "Portland",
                            CountryId = 1,
                            Rating = 0.0
                        });
                });

            modelBuilder.Entity("Travel.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryName");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "France"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "Italy"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "Hong Kong"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "England"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryName = "Kenya"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryName = "Indonesia"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryName = "Brasil"
                        });
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Blurb");

                    b.Property<int>("CityId");

                    b.Property<double>("Rating");

                    b.Property<int>("UserId");

                    b.HasKey("ReviewId");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 3,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 3,
                            Rating = 2.0,
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 4,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 3,
                            Rating = 4.0,
                            UserId = 3
                        },
                        new
                        {
                            ReviewId = 5,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 6,
                            Rating = 5.0,
                            UserId = 4
                        },
                        new
                        {
                            ReviewId = 6,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 7,
                            Rating = 3.0,
                            UserId = 4
                        },
                        new
                        {
                            ReviewId = 7,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 10,
                            Rating = 1.0,
                            UserId = 5
                        },
                        new
                        {
                            ReviewId = 8,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 12,
                            Rating = 2.0,
                            UserId = 7
                        },
                        new
                        {
                            ReviewId = 9,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 4,
                            Rating = 4.0,
                            UserId = 8
                        },
                        new
                        {
                            ReviewId = 10,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 5,
                            Rating = 5.0,
                            UserId = 12
                        },
                        new
                        {
                            ReviewId = 11,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 5,
                            Rating = 4.0,
                            UserId = 10
                        },
                        new
                        {
                            ReviewId = 12,
                            Blurb = "t vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero",
                            CityId = 9,
                            Rating = 3.0,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("Travel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 3,
                            UserName = "Dom"
                        },
                        new
                        {
                            UserId = 4,
                            UserName = "Jen"
                        },
                        new
                        {
                            UserId = 5,
                            UserName = "Anita"
                        },
                        new
                        {
                            UserId = 6,
                            UserName = "Devin"
                        },
                        new
                        {
                            UserId = 7,
                            UserName = "Hailey"
                        },
                        new
                        {
                            UserId = 8,
                            UserName = "Neha"
                        },
                        new
                        {
                            UserId = 9,
                            UserName = "Joel"
                        },
                        new
                        {
                            UserId = 10,
                            UserName = "Kira"
                        },
                        new
                        {
                            UserId = 11,
                            UserName = "Molly"
                        },
                        new
                        {
                            UserId = 12,
                            UserName = "Sofia"
                        });
                });

            modelBuilder.Entity("Travel.Models.City", b =>
                {
                    b.HasOne("Travel.Models.Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.HasOne("Travel.Models.City")
                        .WithMany("Reviews")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Travel.Models.User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
